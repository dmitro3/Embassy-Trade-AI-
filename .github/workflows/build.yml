name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x]
      
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      shell: bash
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Run Unit Tests
      run: npm test
    
    - name: Run Electron Tests
      run: npm run electron:test
      
    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.os }}
        path: test-reports/
      if: always()

  build:
    name: Build Application
    needs: test
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x]
        include:
          - os: ubuntu-latest
            build-command: npm run electron:linux
            output-path: dist/*.AppImage dist/*.deb
          - os: windows-latest
            build-command: npm run electron:win
            output-path: dist/*.exe
          - os: macos-latest
            build-command: npm run electron:mac
            output-path: dist/*.dmg
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Build Next.js App
      run: npm run export
    
    - name: Build Electron App
      run: ${{ matrix.build-command }}
      
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: embassy-trade-desktop-${{ matrix.os }}
        path: ${{ matrix.output-path }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || contains(github.ref, 'tags/v')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          artifacts/embassy-trade-desktop-ubuntu-latest/*
          artifacts/embassy-trade-desktop-windows-latest/*
          artifacts/embassy-trade-desktop-macos-latest/*
        draft: true